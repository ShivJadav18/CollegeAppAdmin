@model PizzaShop.Repository.ViewModels.Modifiers
@{
    var totalpage = (int)Math.Ceiling(((double)Model.totalmodifiers / (double)Model.count));
}
<table class="table table-borderless">
    <thead>
        <th class="">
            <div class="form-check">
                <input type="checkbox" class="form-check-input" value="" id="select-all-modifiersinmain" />
                <label for="p1" class="header-per form-check-label">
                    <h3 class="header-per">Name</h3>
                </label>
            </div>
        </th>
        <th class="text-center">Unit</th>
        <th class="text-center">Rate</th>
        <th class="text-center">Quantity</th>
        <th class="text-center">Action</th>
    </thead>

    @foreach (var modifier in Model.modifiers)
    {
        <tr data-modifierid="@modifier.ModifierId" data-groupid="@Model.groupid">
            <td class="">
                <div class="form-check  mb-3">
                    <input type="checkbox" class="form-check-input modifiers-checkboxes" value="" id="p2" />
                    <label for="p2" class=" form-check-label">@modifier.Modifiername</label>
                </div>
            </td>
            <td class="text-center">@modifier.Unit.Shortname</td>
            <td class="text-center">@modifier.Rate</td>
            <td class="text-center">@modifier.Quantity</td>
            <td class="text-center">
                <i class="fa fa-pencil m-1 Edit-Modifier-icon" aria-hidden="true"></i><i
                    class="fa fa-trash Delete-Modifier-icon" aria-hidden="true"></i>
            </td>
        </tr>
    }
</table>
<div class="modal fade" id="delete-Modifier-conf" data-bs-backdrop="static" data-bs-keyboard="false" tabindex="-1"
    aria-labelledby="staticBackdropLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="staticBackdropLabel">Delete Confirmation</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body text-center">
                <img src="~/images/toppng.com-warning-icon-2400x2400.png" alt="warning" class="warning-img">
                <p>Are you sure you want to delete this Modifier?</p>
            </div>
            <div class="modal-footer d-flex justify-content-center">
                <button type="button" class="btn btn-nonsecondary imp" id="Modifier-delete-btn">Yes</button>
                <button type="button" class="btn btn-nonprimary imp" data-bs-dismiss="modal">No</button>
            </div>
        </div>
    </div>
</div>
<div class="d-flex justify-content-end">
    <div class="dropdown d-flex justify-content-center align-items-center w-25">
        <p class="w-50 text-center m-2">Modifiers per page</p>
        <select name="itemCount" id="ModifierCount" asp-for="@Model.count" class="form-control w-25">
            <option value="5" selected>5</option>
            <option value="10">10</option>
            <option value="15">15</option>
        </select>
    </div>
    <div class="d-flex align-items-center">
        <p class="m-2">Showing 1..5 of 14</p>
        <div class="paging d-flex justify-content-around align-items-center">
            <button class="btn" id="prevmodifiers"><i class="fa fa-angle-left" aria-hidden="true"></i></button>
            <button class="btn" id="nextmodifiers"><i class="fa fa-angle-right" aria-hidden="true"></i></button>
        </div>
    </div>
</div>


<script>
    $(document).ready(() => {

        if (@totalpage <= @Model.pageno) {
            $("#nextmodifiers").prop("disabled", true);
        }
        if (@Model.pageno == 1) {
            $("#prevmodifiers").prop("disabled", true);
        }

        $("#ModifierCount").change(() => {
            loadModifiers($("#search-modifier").val(), 1);
        });

        $("#nextmodifiers").on("click", () => {

            loadModifiers($("#search-modifier").val(),@Model.pageno+1);
        });

        $("#prevmodifiers").on("click", () => {
            loadModifiers($("#search-modifier").val(), @Model.pageno-1);
        })

        $("#select-all-modifiersinmain").change(function () {
            $(".modifiers-checkboxes").prop("checked", $(this).is(":checked"));
        })

        $(".Edit-Modifier-icon").click(function () {
            var modifierid = $(this).closest("tr").data("modifierid");

            $.ajax({
                url: "/MenuModule/EditModifier",
                type: "GET",
                data: {
                    modifierid: modifierid
                },
                success: (response) => {
                    if (response.success) {
                        console.log(response)
                        $("#ModifierNameEdit").val(response.name);
                        $("#modifireRateEdit").val(response.rate);
                        $("#modifierQuantityEdit").val(response.quantity);
                        $("#modifierUnitEdit").val(response.unitId);
                        $("#modifierDescriptionEdit").val(response.description);
                        $("#ModifieridForEdit").val(response.modifierId)
                        $("#EditModifier").modal("show");
                    } else {
                        alert("You are not authorized to edit Modifier.");
                    }
                }
            })
        })
        var modifier_id = null;
        var group_id = null;
        $(".Delete-Modifier-icon").click(function () {
            modifier_id = $(this).closest("tr").data("modifierid");
            group_id = $(this).closest("tr").data("groupid");
            $("#delete-Modifier-conf").modal("show");
        })

        $("#Modifier-delete-btn").click(function () {
            $.ajax({
                url: "/MenuModule/RemoveModifier",
                data: {
                    modifierid: modifier_id,
                    groupid: group_id
                },
                success: (response) => {
                    if(typeof response == "string"){
                          alert("You are not authorized to delete Modifier.");
                         return;
                    }                    
                        window.location.reload();
                },
                error: (error) => {
                    alert(error);
                }
            })
        })
    })
</script>
